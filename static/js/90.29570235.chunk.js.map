{"version":3,"file":"static/js/90.29570235.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/LoginForm/Login.mui.style.jsx","components/LoginForm/LoginForm.styled.jsx","components/SerchContact/SearchContact.mui.styled.jsx","config/AnimateBackOptions/AnimateBackOptions.jsx","components/AddContactForm/AddContactForm.jsx","components/hooks/useContact.jsx","pages/AddContact/AddContact.mui.styled.jsx","pages/AddContact/AddContact.jsx"],"sourcesContent":["import { ThreeDots, ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"40\"\n      width=\"40\"\n      radius=\"9\"\n      color=\"#5260df\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport const Spinner = () => {\n  return (\n    <ThreeCircles\n      height=\"30\"\n      width=\"30\"\n      color=\" #394497\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","import styled from '@emotion/styled';\nimport { Container, Button } from '@mui/material';\n\nexport const LoginFormContainer = styled(Container)(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  height: '100%',\n}));\n\nexport const StyledBtn = styled(Button)(() => ({\n  display: 'inline-block',\n  padding: ' .75rem 1.25rem',\n  borderRadius: '10rem',\n  color: '#fff',\n  textTransform: 'uppercase',\n  fontSize: '1rem',\n  letterSpacing: '.15rem',\n  transition: 'all .3s',\n  position: 'relative',\n  overflow: 'hidden',\n  zIndex: 1,\n  width: 305,\n\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#0cf',\n    border: '10rem',\n    zIndex: -2,\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '0%',\n    height: '100%',\n    backgroundColor: '#2f8da4',\n    transition: 'all .3s',\n    borderRadius: '10rem',\n    zIndex: -1,\n  },\n  '&:hover::before ': {\n    width: '100%',\n  },\n}));\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  font-family: 'Dancing Script', cursive;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  background: rgba(255, 255, 255, 0.25);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  height: 450px;\n  width: 450px;\n  padding: 20px 40px;\n`;\n\nexport const Title = styled.h1`\n  color: black;\n  font-size: 27px;\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const StyledTextField = styled(TextField)(() => ({\n  background: 'rgba(255, 255, 255, 0.22)',\n  borderRadius: '16px',\n  boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\n  backdropFilter: 'blur(3px)',\n\n  '& label.Mui-focused': {\n    color: '#fff',\n  },\n\n  '& label': {\n    color: 'white',\n  },\n\n  '& fieldset': {\n    outline: 'none',\n    border: 'none',\n  },\n}));\n","export const animateOptions = {\n  background: {\n    color: {\n      value: '#0d47a1',\n    },\n  },\n\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: 'push',\n      },\n      onHover: {\n        enable: true,\n        mode: 'bubble',\n      },\n    },\n    modes: {\n      bubble: {\n        opacity: 0.8,\n        size: 10,\n      },\n      repulse: {\n        distance: 100,\n        duration: 0.2,\n      },\n    },\n  },\n  particles: {\n    color: {\n      value: '#eef207',\n    },\n    links: {\n      color: '#ffffff',\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      // direction: 'none',\n      enable: true,\n      // outModes: {\n      //   default: 'bounce',\n      // },\n      // random: false,\n      speed: 1.5,\n      // straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    // shape: {\n    //   type: 'circle',\n    // },\n    // size: {\n    //   value: { min: 1, max: 5 },\n    // },\n  },\n  detectRetina: true,\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\nimport { useContact } from 'components/hooks/useContact';\nimport { getContacts } from 'redux/ContactsSlice/selectors';\nimport { addContact } from 'redux/ContactsSlice/operation';\nimport { StyledBtn } from 'components/LoginForm/Login.mui.style';\nimport { Form } from 'components/LoginForm/LoginForm.styled';\nimport { StyledTextField } from 'components/SerchContact/SearchContact.mui.styled';\n\nexport const AddContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { isLoading } = useContact();\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const addedNumber = contacts.items.some(\n      contact => contact.number === number\n    );\n\n    if (addedNumber) {\n      toast.error(`Contact with number ${number} is already exist! `);\n      return;\n    } else {\n      toast.success(`The contact was added`);\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <Form onSubmit={formSubmit}>\n      <h2 style={{ padding: '0 0 10px', color: '#fff' }}>Create contact</h2>\n      <label>\n        <StyledTextField\n          type=\"text\"\n          name=\"name\"\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          sx={{ width: '25ch' }}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <StyledTextField\n          type=\"tel\"\n          name=\"number\"\n          id=\"outlined-basic\"\n          label=\"Number\"\n          variant=\"outlined\"\n          sx={{ width: '25ch' }}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <StyledBtn variant=\"contained\" type=\"submit\">\n          Add contact\n        </StyledBtn>\n      )}\n    </Form>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilteredContact,\n  getIsLoading,\n  getError,\n  getSuccess,\n} from 'redux/ContactsSlice/selectors';\n\nexport const useContact = () => {\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n  const allContacts = useSelector(getContacts);\n  const filterContact = useSelector(getFilteredContact);\n  const success = useSelector(getSuccess);\n\n  return {\n    isLoading,\n    isError,\n    allContacts,\n    filterContact,\n    success,\n  };\n};\n","import styled from '@emotion/styled';\nimport { Container, Button } from '@mui/material';\n\nexport const AddContactContainer = styled(Container)(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '100vh',\n}));\n\nexport const StyledBtn = styled(Button)(() => ({\n  display: 'inline-block',\n  padding: ' .75rem 1.25rem',\n  borderRadius: '10rem',\n  color: '#fff',\n  textTransform: 'uppercase',\n  fontSize: '1rem',\n  letterSpacing: '.15rem',\n  transition: 'all .3s',\n  position: 'relative',\n  overflow: 'hidden',\n  zIndex: 1,\n  width: 305,\n\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#0cf',\n    border: '10rem',\n    zIndex: -2,\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '0%',\n    height: '100%',\n    backgroundColor: '#2f8da4',\n    transition: 'all .3s',\n    borderRadius: '10rem',\n    zIndex: -1,\n  },\n  '&:hover::before ': {\n    width: '100%',\n  },\n}));\n","import { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport Particles from 'react-particles';\nimport { loadFull } from 'tsparticles';\nimport { animateOptions } from 'config/AnimateBackOptions/AnimateBackOptions';\nimport { addLocation } from 'redux/ContactsSlice/contactSlice';\nimport { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { AddContactContainer } from './AddContact.mui.styled';\nimport { useEffect } from 'react';\n\nconst AddContact = () => {\n  const dispatch = useDispatch();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(addLocation(location.pathname));\n  }, [dispatch, location.pathname]);\n\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async container => {}, []);\n\n  return (\n    <AddContactContainer disableGutters maxWidth={false}>\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={animateOptions}\n      />\n      <AddContactForm />\n    </AddContactContainer>\n  );\n};\n\nexport default AddContact;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Spinner","wrapperClass","outerCircleColor","innerCircleColor","middleCircleColor","LoginFormContainer","styled","Container","display","justifyContent","alignItems","flexDirection","StyledBtn","Button","padding","borderRadius","textTransform","fontSize","letterSpacing","transition","position","overflow","zIndex","content","bottom","left","backgroundColor","border","Form","Title","StyledTextField","TextField","background","boxShadow","backdropFilter","outline","animateOptions","value","interactivity","events","onClick","enable","mode","onHover","modes","bubble","opacity","size","repulse","distance","duration","particles","links","collisions","move","speed","number","density","area","detectRetina","AddContactForm","useState","name","setName","setNumber","isLoading","useSelector","getIsLoading","isError","getError","allContacts","getContacts","filterContact","getFilteredContact","success","getSuccess","contacts","dispatch","useDispatch","handleChange","e","target","onSubmit","preventDefault","items","some","contact","toast","addContact","style","type","id","label","variant","sx","pattern","title","required","onChange","AddContactContainer","location","useLocation","useEffect","addLocation","pathname","particlesInit","useCallback","engine","loadFull","particlesLoaded","container","disableGutters","maxWidth","init","loaded","options"],"sourceRoot":""}