{"version":3,"file":"static/js/332.4861aa6f.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.mui.style.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.mui.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { ThreeDots, ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"40\"\n      width=\"40\"\n      radius=\"9\"\n      color=\"#5260df\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport const Spinner = () => {\n  return (\n    <ThreeCircles\n      height=\"30\"\n      width=\"30\"\n      color=\" #394497\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  font-family: 'Dancing Script', cursive;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n  background: rgba(255, 255, 255, 0.25);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  height: 450px;\n  width: 450px;\n  padding: 20px 40px;\n`;\n\nexport const Title = styled.h2`\n  color: black;\n  font-size: 25px;\n`;\n","import styled from '@emotion/styled';\nimport { Container, Button, TextField } from '@mui/material';\n\nexport const RegisterFormContainer = styled(Container)(() => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  gap: 5,\n  height: '100%',\n}));\n\nexport const StyledBtn = styled(Button)(() => ({\n  display: 'inline-block',\n  padding: ' .75rem 1.25rem',\n  borderRadius: '10rem',\n  color: '#fff',\n  textTransform: 'uppercase',\n  fontSize: '1rem',\n  letterSpacing: '.15rem',\n  transition: 'all .3s',\n  position: 'relative',\n  overflow: 'hidden',\n  zIndex: 1,\n  width: 305,\n\n  '&::after': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#0cf',\n    border: '10rem',\n    zIndex: -2,\n  },\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '0%',\n    height: '100%',\n    backgroundColor: '#2f8da4',\n    transition: 'all .3s',\n    borderRadius: '10rem',\n    zIndex: -1,\n  },\n  '&:hover::before ': {\n    width: '100%',\n  },\n}));\n\nexport const StyledTextField = styled(TextField)(() => ({\n  '& .MuiInputBase-root': {\n    height: '40px',\n  },\n\n  '& .MuiFormLabel-root': {\n    top: '-7px',\n  },\n}));\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { register } from 'redux/Auth/authOperation';\nimport { Form, Title } from './RegisterForm.styled';\nimport { useAuth } from 'components/hooks/useAuth';\nimport { Spinner } from 'components/Loader/Loader';\nimport {\n  RegisterFormContainer,\n  StyledBtn,\n  StyledTextField,\n} from './RegisterForm.mui.style';\nimport { SubscriptionRadio } from 'components/SubscriptionRadio/SubscriptionRadio';\nimport googleImg from '../../img/IOS_Google_icon.png';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [subscription, setSubscription] = useState('');\n  const { isRegistered } = useAuth();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n        subscription,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <RegisterFormContainer>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Title>Sign UP width</Title>\n        <a href=\"https://contacts-04gv.onrender.com/api/auth/google\">\n          <img\n            src={googleImg}\n            style={{\n              height: 50,\n            }}\n            alt=\"google-registration-icon\"\n          />\n        </a>\n\n        <label>\n          <StyledTextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            sx={{ width: '305px' }}\n          />\n        </label>\n        <label>\n          <StyledTextField\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            sx={{ width: '305px' }}\n          />\n        </label>\n        <label>\n          <StyledTextField\n            label=\"Password\"\n            variant=\"outlined\"\n            required\n            type=\"password\"\n            name=\"password\"\n            minLength=\"8\"\n            maxLength=\"20\"\n            value={password}\n            onChange={handleChange}\n            sx={{ width: '305px' }}\n          />\n        </label>\n        <SubscriptionRadio subscription={setSubscription} />\n\n        {isRegistered ? (\n          <Spinner />\n        ) : (\n          <StyledBtn variant=\"contained\" type=\"submit\">\n            Sign UP\n          </StyledBtn>\n        )}\n      </Form>\n    </RegisterFormContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Container } from '@mui/material';\nimport img from '../../img/pexels-ylanite-koppens-1906440.jpg';\n\nexport const RegisterContainer = styled(Container)(() => ({\n  height: '100vh',\n  backgroundImage: `url(${img})`,\n  backgroundPosition: 'center',\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: 'cover',\n}));\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { RegisterContainer } from './Register.mui.styled';\n\nexport default function Register() {\n  return (\n    <section>\n      <RegisterContainer disableGutters maxWidth={false}>\n        <RegisterForm />\n      </RegisterContainer>\n    </section>\n  );\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Spinner","wrapperClass","outerCircleColor","innerCircleColor","middleCircleColor","Form","styled","Title","RegisterFormContainer","Container","display","justifyContent","alignItems","flexDirection","gap","StyledBtn","Button","padding","borderRadius","textTransform","fontSize","letterSpacing","transition","position","overflow","zIndex","content","bottom","left","backgroundColor","border","StyledTextField","TextField","top","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","subscription","setSubscription","isRegistered","useAuth","handleChange","target","value","onSubmit","e","preventDefault","form","currentTarget","register","elements","reset","autoComplete","href","src","googleImg","style","alt","id","label","variant","required","type","onChange","sx","minLength","maxLength","SubscriptionRadio","RegisterContainer","backgroundImage","img","backgroundPosition","backgroundRepeat","backgroundSize","Register","disableGutters","maxWidth"],"sourceRoot":""}