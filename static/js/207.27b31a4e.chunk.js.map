{"version":3,"file":"static/js/207.27b31a4e.chunk.js","mappings":"qNAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,EAEYC,EAAU,WACrB,OACE,SAAC,KAAD,CACER,OAAO,KACPC,MAAM,KACNE,MAAM,WACNE,aAAc,CAAC,EACfI,aAAa,GACbF,SAAS,EACTH,UAAU,yBACVM,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,IAGvB,C,4JC9BYC,EAAYC,EAAAA,GAAAA,IAAH,wTAeTC,EAAOD,EAAAA,GAAAA,KAAH,iMAYJE,EAAQF,EAAAA,GAAAA,GAAH,yC,4BCrBLG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEFE,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEL,EAeD,OACE,SAAClB,EAAD,WACE,UAACE,EAAD,CAAMiB,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACflB,GACEmB,EAAAA,EAAAA,IAAS,CACPhB,KAAMc,EAAKG,SAASjB,KAAKU,MACzBR,MAAOY,EAAKG,SAASf,MAAMQ,MAC3BN,SAAUU,EAAKG,SAASb,SAASM,SAGrCI,EAAKI,OACN,EAIiCC,aAAa,MAA3C,WACE,SAACxB,EAAD,8BACA,4BACE,SAACyB,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,OACLzB,KAAK,OACLU,MAAOV,EACP0B,SAAUlB,EACVmB,GAAI,CAAE/C,MAAO,aAGjB,4BACE,SAACwC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,QACLzB,KAAK,QACLU,MAAOR,EACPwB,SAAUlB,EACVmB,GAAI,CAAE/C,MAAO,aAGjB,4BACE,SAACwC,EAAA,EAAD,CACEC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,WACLzB,KAAK,WACL4B,UAAU,IACVC,UAAU,KACVnB,MAAON,EACPsB,SAAUlB,EACVmB,GAAI,CAAE/C,MAAO,YAGhB0B,GACC,SAAC,IAAD,KAEA,SAACwB,EAAA,EAAD,CAAQP,QAAQ,YAAYE,KAAK,SAAjC,0BAOT,EC9Fc,SAASM,IACtB,OACE,4BACE,6CAEA,SAACnC,EAAD,MAGL,C","sources":["Loader/Loader.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import { ThreeDots, ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"40\"\n      width=\"40\"\n      radius=\"9\"\n      color=\"#5260df\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport const Spinner = () => {\n  return (\n    <ThreeCircles\n      height=\"30\"\n      width=\"30\"\n      color=\" #394497\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: 100px auto;\n  width: 568px;\n  max-width: 100%;\n  min-height: 480px;\n\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  height: 100%;\n  width: 100%;\n  padding: 20px 40px;\n`;\n\nexport const Title = styled.h1`\n  color: black;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { register } from 'redux/Auth/operation';\nimport { Form, Container, Title } from './RegisterForm.styled';\nimport { useAuth } from 'components/hooks/useAuth';\nimport { Spinner } from 'Loader/Loader';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { isRegistered } = useAuth();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Title>Create Account</Title>\n        <label>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            sx={{ width: '25ch' }}\n          />\n        </label>\n        <label>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            sx={{ width: '25ch' }}\n          />\n        </label>\n        <label>\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            required\n            type=\"password\"\n            name=\"password\"\n            minlength=\"6\"\n            maxlength=\"20\"\n            value={password}\n            onChange={handleChange}\n            sx={{ width: '25ch' }}\n          />\n        </label>\n        {isRegistered ? (\n          <Spinner />\n        ) : (\n          <Button variant=\"contained\" type=\"submit\">\n            Register\n          </Button>\n        )}\n      </Form>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Spinner","wrapperClass","outerCircleColor","innerCircleColor","middleCircleColor","Container","styled","Form","Title","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isRegistered","useAuth","handleChange","target","value","onSubmit","e","preventDefault","form","currentTarget","register","elements","reset","autoComplete","TextField","id","label","variant","required","type","onChange","sx","minlength","maxlength","Button","Register"],"sourceRoot":""}