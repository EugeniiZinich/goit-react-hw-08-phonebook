{"version":3,"file":"static/js/178.4ad2963e.chunk.js","mappings":"qNAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,GAGd,EAEYC,EAAU,WACrB,OACE,SAAC,KAAD,CACER,OAAO,KACPC,MAAM,KACNE,MAAM,WACNE,aAAc,CAAC,EACfI,aAAa,GACbF,SAAS,EACTH,UAAU,yBACVM,iBAAiB,GACjBC,iBAAiB,GACjBC,kBAAkB,IAGvB,C,+KC9BYC,EAAYC,EAAAA,GAAAA,IAAH,8FAMTC,EAAaD,EAAAA,GAAAA,KAAH,uS,mBC4FvB,EA1FoB,WAClB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MACTC,ECCD,CACLA,WAPgBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAQ5BC,SAPcN,EAAAA,EAAAA,IAAYO,EAAAA,IAQ1BC,aAPkBR,EAAAA,EAAAA,IAAYC,EAAAA,IAQ9BQ,eAPoBT,EAAAA,EAAAA,IAAYU,EAAAA,IAQhCC,SAPcX,EAAAA,EAAAA,IAAYY,EAAAA,KDCpBR,UAEFS,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBpB,EAAR,EAAQA,KAAMqB,EAAd,EAAcA,MAEd,OAAQrB,GACN,IAAK,OACHC,EAAQoB,GACR,MACF,IAAK,SACHlB,EAAUkB,GACV,MAEF,QACE,OAAO,KAEZ,EAsBD,OACE,SAACzB,EAAD,WACE,UAACE,EAAD,CAAYwB,SAtBG,SAAAH,GACjBA,EAAEI,iBAEkBnB,EAASoB,MAAMC,MACjC,SAAAC,GAAO,OAAIA,EAAQxB,SAAWA,CAAvB,IAIPyB,EAAAA,GAAAA,MAAA,8BAAmCzB,EAAnC,yBAGAyB,EAAAA,GAAAA,QAAA,yBAGFpB,GAASqB,EAAAA,EAAAA,IAAW,CAAE5B,KAAAA,EAAME,OAAAA,KAE5BD,EAAQ,IACRE,EAAU,IACX,EAIG,WACE,eAAI0B,MAAO,CAAEC,QAAS,YAAtB,gCACA,4BACE,SAACC,EAAA,EAAD,CACEC,KAAK,OACLhC,KAAK,OACLiC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,GAAI,CAAEpD,MAAO,QACbqD,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRlB,MAAOrB,EACPwC,SAAUtB,OAGd,4BACE,SAACa,EAAA,EAAD,CACEC,KAAK,MACLhC,KAAK,SACLiC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,GAAI,CAAEpD,MAAO,QACbqD,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRlB,MAAOnB,EACPsC,SAAUtB,OAGd,kBACCT,GACC,SAAC3B,EAAA,EAAD,KAEA,SAAC2D,EAAA,EAAD,CAAQN,QAAQ,YAAYH,KAAK,SAAjC,6BAOT,C,wJElGM,IAAM1B,EAAc,SAAAoC,GAAK,OAAIA,EAAMtC,QAAV,EAEnBW,EAAqB,SAAA2B,GAAK,OAAIA,EAAMC,OAAOtB,KAAjB,EAE1BX,EAAe,SAAAgC,GAAK,OAAIA,EAAMtC,SAASK,SAAnB,EAEpBG,EAAW,SAAA8B,GAAK,OAAIA,EAAMtC,SAASwC,KAAnB,EAEhB3B,EAAa,SAAAyB,GAAK,OAAIA,EAAMtC,SAASY,OAAnB,C","sources":["Loader/Loader.jsx","pages/ContactForm/ContactForm.style.jsx","pages/ContactForm/ContactForm.jsx","components/hooks/useContact.jsx","redux/ContactsSlice/selectors.jsx"],"sourcesContent":["import { ThreeDots, ThreeCircles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"40\"\n      width=\"40\"\n      radius=\"9\"\n      color=\"#5260df\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport const Spinner = () => {\n  return (\n    <ThreeCircles\n      height=\"30\"\n      width=\"30\"\n      color=\" #394497\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"three-circles-rotating\"\n      outerCircleColor=\"\"\n      innerCircleColor=\"\"\n      middleCircleColor=\"\"\n    />\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FormSubmit = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  top: 0;\n  width: 450px;\n  height: 500px;\n  margin-top: 50px;\n  border-radius: 20px;\n  padding: 40px;\n  box-sizing: border-box;\n  background: #ecf0f3;\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport { TextField, Button } from '@mui/material';\nimport { getContacts } from 'redux/ContactsSlice/selectors';\nimport { addContact } from 'redux/ContactsSlice/operation';\nimport { FormSubmit, Container } from './ContactForm.style';\nimport { useContact } from 'components/hooks/useContact';\nimport { Loader } from 'Loader/Loader';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const { isLoading } = useContact();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return null;\n    }\n  };\n\n  const formSubmit = e => {\n    e.preventDefault();\n\n    const addedNumber = contacts.items.some(\n      contact => contact.number === number\n    );\n\n    if (addedNumber) {\n      toast.error(`Contact with number ${number} is already exist! `);\n      return;\n    } else {\n      toast.success(`The contact was added`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container>\n      <FormSubmit onSubmit={formSubmit}>\n        <h2 style={{ padding: '0 0 10px' }}>Add yours contact</h2>\n        <label>\n          <TextField\n            type=\"text\"\n            name=\"name\"\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            sx={{ width: '25ch' }}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label>\n          <TextField\n            type=\"tel\"\n            name=\"number\"\n            id=\"outlined-basic\"\n            label=\"Number\"\n            variant=\"outlined\"\n            sx={{ width: '25ch' }}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Button variant=\"contained\" type=\"submit\">\n            Add contact\n          </Button>\n        )}\n      </FormSubmit>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector } from 'react-redux';\nimport {\n  getContacts,\n  getFilteredContact,\n  getIsLoading,\n  getError,\n  getSuccess,\n} from 'redux/ContactsSlice/selectors';\n\nexport const useContact = () => {\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n  const allContacts = useSelector(getContacts);\n  const filterContact = useSelector(getFilteredContact);\n  const success = useSelector(getSuccess);\n\n  return {\n    isLoading,\n    isError,\n    allContacts,\n    filterContact,\n    success,\n  };\n};\n","export const getContacts = state => state.contacts;\n\nexport const getFilteredContact = state => state.filter.value;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getSuccess = state => state.contacts.success;\n"],"names":["Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","Spinner","wrapperClass","outerCircleColor","innerCircleColor","middleCircleColor","Container","styled","FormSubmit","useState","name","setName","number","setNumber","contacts","useSelector","getContacts","dispatch","useDispatch","isLoading","getIsLoading","isError","getError","allContacts","filterContact","getFilteredContact","success","getSuccess","handleChange","e","target","value","onSubmit","preventDefault","items","some","contact","toast","addContact","style","padding","TextField","type","id","label","variant","sx","pattern","title","required","onChange","Button","state","filter","error"],"sourceRoot":""}