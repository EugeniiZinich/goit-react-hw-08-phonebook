{"version":3,"file":"static/js/504.8b415ca9.chunk.js","mappings":"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","sources":["components/ListContacts/ListContacts.style.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ListContacts/ListContacts.jsx","components/SerchContact/SearchContact.style.jsx","components/SerchContact/SearchContact.mui.styled.jsx","components/SerchContact/SearchContact.jsx","components/AnimateBack/AnimateBack.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n\n  max-width: 450px;\n  max-height: 600px;\n`;\n\nexport const ContactList = styled.ul`\n  height: 100%;\n  width: 100%;\n  overflow-x: scroll;\n  overflow-x: hidden;\n\n  background: transparent;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  scrollbar-width: none;\n`;\n\nexport const ContactCard = styled.li`\n  display: flex;\n  align-items: center;\n\n  background: linear-gradient(\n    3deg,\n    rgba(34, 193, 195, 1) 0%,\n    rgba(239, 238, 231, 0.6699929971988796) 100%\n  );\n  border-radius: 20px;\n  text-align: center;\n  min-height: 80px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  display: flex;\n  align-items: center;\n\n  color: #394497;\n  background-color: transparent;\n  height: 30px;\n  border-radius: 20px;\n  cursor: pointer;\n  font-weight: 900;\n\n  transition: 0.5s;\n  border: none;\n\n  &:hover {\n    box-shadow: none;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n\nexport const Inner = styled.div`\n  display: flex;\n\n  max-width: 200px;\n\n  & span {\n    padding-right: 5px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { DeleteBtn } from 'components/ListContacts/ListContacts.style';\nimport { deleteContacts } from 'redux/ContactsSlice/operation';\nimport { Container, Inner } from './ContactItem.styled';\n\nexport const ContactItem = ({ name, id, number }) => {\n  const stringToColor = string => {\n    let hash = 0;\n    let i;\n\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n\n    return color;\n  };\n\n  const stringAvatar = name => {\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name.split('')[0]}${name.split('')[1]}`,\n    };\n  };\n\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Stack direction=\"row\" spacing={2}>\n        <Avatar {...stringAvatar(`${name}`)} />\n      </Stack>\n      <Inner>\n        <span>{name}: </span>\n        <span>{number}</span>\n      </Inner>\n\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n        <DeleteIcon />\n      </DeleteBtn>\n    </Container>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactList, ContactCard, Container } from './ListContacts.style';\nimport { getContacts, getFilteredContact } from 'redux/ContactsSlice/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nconst ListContacts = ({ children }) => {\n  const { items } = useSelector(getContacts);\n\n  const filter = useSelector(getFilteredContact);\n\n  const getFilterContact = () => {\n    if (filter === '') {\n      return items;\n    } else {\n      const toNormalazedFilter = filter.trim().toLowerCase();\n      return items.filter(contact =>\n        contact.name.trim().toLowerCase().includes(toNormalazedFilter)\n      );\n    }\n  };\n\n  const contact = getFilterContact();\n\n  return (\n    <>\n      <Container>\n        {children}\n        <ContactList>\n          {items.length > 0 &&\n            [...contact].reverse().map(({ name, id, number }) => {\n              return (\n                <ContactCard key={id}>\n                  <ContactItem name={name} id={id} number={number} />\n                </ContactCard>\n              );\n            })}\n        </ContactList>\n      </Container>\n    </>\n  );\n};\n\nexport default ListContacts;\n","import styled from 'styled-components';\n\nexport const FilterInput = styled.input`\n  display: block;\n  width: 250px;\n  border: none;\n  outline: none;\n\n  padding: 10px;\n  padding-left: 50px;\n  margin-top: 10px;\n\n  font-size: 14px;\n  border-radius: 50px;\n  box-shadow: inset 6px 6px 6px #cbced1, inset -6px -6px 6px white;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-bottom: 25px;\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const StyledTextField = styled(TextField)(() => ({\n  background: 'rgba(255, 255, 255, 0.22)',\n  borderRadius: '16px',\n  boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\n  backdropFilter: 'blur(3px)',\n\n  '& label': {\n    color: '#fff',\n  },\n\n  '& input': {\n    '&:focus::placeholder': {\n      color: '#fff',\n    },\n  },\n\n  '& fieldset': {\n    outline: 'none',\n    border: 'none',\n  },\n}));\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container } from './SearchContact.style';\nimport { StyledTextField } from './SearchContact.mui.styled';\n\nimport { filterContact } from 'redux/FilterSlice/filtersSlice';\n\nconst SearchContact = () => {\n  const [filter, setFilter] = useState('');\n\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const value = e.currentTarget.value;\n    setFilter(value);\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <Container>\n      <label>\n        <StyledTextField\n          id=\"outlined-basic\"\n          label=\"Find contacts by name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          value={filter}\n          onChange={changeFilter}\n        ></StyledTextField>\n      </label>\n    </Container>\n  );\n};\n\nexport default SearchContact;\n","export const animateOptions = {\n  background: {\n    color: {\n      value: '#0d47a1',\n    },\n  },\n\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: 'push',\n      },\n      onHover: {\n        enable: true,\n        mode: 'bubble',\n      },\n    },\n    modes: {\n      bubble: {\n        opacity: 0.8,\n        size: 10,\n      },\n      repulse: {\n        distance: 100,\n        duration: 0.2,\n      },\n    },\n  },\n  particles: {\n    color: {\n      value: '#eef207',\n    },\n    links: {\n      color: '#ffffff',\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1,\n    },\n    collisions: {\n      enable: true,\n    },\n    move: {\n      // direction: 'none',\n      enable: true,\n      // outModes: {\n      //   default: 'bounce',\n      // },\n      // random: false,\n      speed: 1.5,\n      // straight: false,\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800,\n      },\n      value: 80,\n    },\n    opacity: {\n      value: 0.5,\n    },\n    // shape: {\n    //   type: 'circle',\n    // },\n    // size: {\n    //   value: { min: 1, max: 5 },\n    // },\n  },\n  detectRetina: true,\n};\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport Particles from 'react-particles';\nimport { loadFull } from 'tsparticles';\nimport ListContacts from 'components/ListContacts';\nimport SearchContact from 'components/SerchContact/SearchContact';\nimport { fetchContacts } from 'redux/ContactsSlice/operation';\nimport { animateOptions } from 'components/AnimateBack/AnimateBack';\nimport { addLocation } from 'redux/ContactsSlice/contactSlice';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  dispatch(addLocation(location.pathname));\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n\n  const particlesLoaded = useCallback(async container => {}, []);\n\n  return (\n    <>\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={animateOptions}\n      />\n\n      <div>\n        <ListContacts>\n          <SearchContact />\n        </ListContacts>\n      </div>\n    </>\n  );\n}\n"],"names":["Container","styled","ContactList","ContactCard","DeleteBtn","Inner","ContactItem","name","id","number","stringToColor","string","i","hash","length","charCodeAt","color","toString","slice","dispatch","useDispatch","Stack","direction","spacing","Avatar","sx","bgcolor","children","split","stringAvatar","type","onClick","deleteContacts","Delete","items","useSelector","getContacts","filter","getFilteredContact","contact","toNormalazedFilter","trim","toLowerCase","includes","getFilterContact","reverse","map","StyledTextField","TextField","background","borderRadius","boxShadow","backdropFilter","outline","border","useState","setFilter","label","variant","value","onChange","e","currentTarget","filterContact","animateOptions","interactivity","events","enable","mode","onHover","modes","bubble","opacity","size","repulse","distance","duration","particles","links","width","collisions","move","speed","density","area","detectRetina","Contacts","location","useLocation","addLocation","pathname","useEffect","fetchContacts","particlesInit","useCallback","engine","loadFull","particlesLoaded","container","init","loaded","options"],"sourceRoot":""}